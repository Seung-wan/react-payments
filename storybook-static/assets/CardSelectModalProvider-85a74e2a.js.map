{"version":3,"file":"CardSelectModalProvider-85a74e2a.js","sources":["../../src/constants/errorMessage.ts","../../src/context/CardSelectModal/CardSelectModalProvider.tsx"],"sourcesContent":["export const ERROR_MESSAGE = {\n  INPUT: {\n    COMMON: {\n      INVALID_NAME: (name: string) =>\n        `input element에 지정되지 않은 name이 주입되었습니다. [injected name with '${name}']`,\n      INVALID_VALUE: '유효하지 않은 값이 입력되었습니다.',\n    },\n    EXPIRATION: {\n      INVALID_MONTH: '유효하지 않은 월이 입력되었습니다.',\n      INVALID_YEAR: '유효하지 않은 년이 입력되었습니다.',\n    },\n  },\n\n  PROVIDER: {\n    INVALID_SCOPE: '유효한 Provider 내부에서만 훅을 사용할 수 있습니다.',\n  },\n};\n","import { createContext, PropsWithChildren, useCallback, useMemo, useState } from 'react';\n\nimport { SelectedCard } from '@/types/card';\n\ntype InitValue = {\n  isModalOpen: boolean;\n  selectedCard: SelectedCard;\n  setSelectedCard: (card: SelectedCard) => void;\n  카드사가선택된: boolean;\n  resetSelectedModal: () => void;\n  handleClickOpenModal: () => void;\n  handleClickCloseModal: () => void;\n  handleClickCard: ({ name, color }: { name: string; color: string }) => void;\n};\n\nconst initValue: InitValue = {\n  isModalOpen: true,\n  selectedCard: { name: '', color: '' },\n  setSelectedCard: () => null,\n  카드사가선택된: false,\n  resetSelectedModal: () => null,\n  handleClickOpenModal: () => null,\n  handleClickCloseModal: () => null,\n  handleClickCard: () => null,\n};\n\nexport const CardSelectModalContext = createContext<InitValue>(initValue);\n\nexport default function CardSelectModalProvider({ children }: PropsWithChildren) {\n  const [isModalOpen, setIsModalOpen] = useState(true);\n  const [selectedCard, setSelectedCard] = useState({\n    name: '',\n    color: '',\n  });\n\n  const 카드사가선택된 = selectedCard.name !== '';\n\n  const handleClickOpenModal = useCallback(() => {\n    setIsModalOpen(true);\n  }, []);\n\n  const handleClickCloseModal = useCallback(() => {\n    setIsModalOpen(false);\n  }, []);\n\n  const resetSelectedModal = useCallback(() => {\n    setSelectedCard({ name: '', color: '' });\n    setIsModalOpen(true);\n  }, []);\n\n  const handleClickCard = useCallback(({ name, color }: { name: string; color: string }) => {\n    if (!name || !color) {\n      return;\n    }\n\n    setSelectedCard({ name, color });\n    setIsModalOpen(false);\n  }, []);\n\n  const contextValue = useMemo(\n    () => ({\n      isModalOpen,\n      selectedCard,\n      setSelectedCard,\n      카드사가선택된,\n      resetSelectedModal,\n      handleClickOpenModal,\n      handleClickCloseModal,\n      handleClickCard,\n    }),\n    [\n      isModalOpen,\n      selectedCard,\n      카드사가선택된,\n      resetSelectedModal,\n      handleClickOpenModal,\n      handleClickCloseModal,\n      handleClickCard,\n    ],\n  );\n\n  return <CardSelectModalContext.Provider value={contextValue}>{children}</CardSelectModalContext.Provider>;\n}\n"],"names":["ERROR_MESSAGE","name","initValue","CardSelectModalContext","createContext","CardSelectModalProvider","children","isModalOpen","setIsModalOpen","useState","selectedCard","setSelectedCard","카드사가선택된","handleClickOpenModal","useCallback","handleClickCloseModal","resetSelectedModal","handleClickCard","color","contextValue","useMemo","jsx","__name"],"mappings":"qKAAO,MAAMA,EAAgB,CAC3B,MAAO,CACL,OAAQ,CACN,aAAeC,GACb,8DAA8DA,MAChE,cAAe,qBACjB,EACA,WAAY,CACV,cAAe,sBACf,aAAc,qBAChB,CACF,EAEA,SAAU,CACR,cAAe,mCACjB,CACF,ECDAC,EAAA,CAA6B,YAAA,GACd,aAAA,CAAA,KAAA,GAAA,MAAA,EAAA,EACuB,gBAAA,IAAA,KACb,QAAA,GACd,mBAAA,IAAA,KACiB,qBAAA,IAAA,KACE,sBAAA,IAAA,KACC,gBAAA,IAAA,IAE/B,EAEOC,EAAAC,EAAA,cAAAF,CAAA,EAEP,SAAAG,EAAA,CAAA,SAAAC,GAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,WAAA,CAAiD,KAAA,GACzC,MAAA,EACC,CAAA,EAGTG,EAAAF,EAAA,OAAA,GAEAG,EAAAC,EAAAA,YAAA,IAAA,CACEN,EAAA,EAAA,CAAmB,EAAA,CAAA,CAAA,EAGrBO,EAAAD,EAAAA,YAAA,IAAA,CACEN,EAAA,EAAA,CAAoB,EAAA,CAAA,CAAA,EAGtBQ,EAAAF,EAAAA,YAAA,IAAA,CACEH,EAAA,CAAA,KAAA,GAAA,MAAA,EAAA,CAAA,EACAH,EAAA,EAAA,CAAmB,EAAA,CAAA,CAAA,EAGrBS,EAAAH,EAAA,YAAA,CAAA,CAAA,KAAAb,EAAA,MAAAiB,CAAA,IAAA,CACE,CAAAjB,GAAA,CAAAiB,IAIAP,EAAA,CAAA,KAAAV,EAAA,MAAAiB,CAAA,CAAA,EACAV,EAAA,EAAA,EAAoB,EAAA,CAAA,CAAA,EAGtBW,EAAAC,EAAA,QAAqB,KAAA,CACZ,YAAAb,EACL,aAAAG,EACA,gBAAAC,EACA,QAAAC,EACA,mBAAAI,EACA,qBAAAH,EACA,sBAAAE,EACA,gBAAAE,CACA,GACF,CACAV,EACEG,EACAE,EACAI,EACAH,EACAE,EACAE,CACA,CACF,EAGF,OAAAI,EAAAA,IAAAlB,EAAA,SAAA,CAAA,MAAAgB,EAAA,SAAAb,CAAA,CAAA,CACF,CAtDAgB,EAAAjB,EAAA"}